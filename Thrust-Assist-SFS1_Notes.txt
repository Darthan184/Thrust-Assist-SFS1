Thrust Assist Mod Notes

DONE: Setup Git Hub Repository
DONE: setup dark theme for Scite
DONE: VS Create using mod creation notes
    https://jmnet.one/sfs/forum/index.php?threads/mod-creation-getting-started.8880/
DONE: add full path to all clas names and remove all "using" statements
    - code now editable using Scite

FAIL: setup cli build
    C:\Windows\Microsoft.NET\Framework64\v4.0.30319\msbuild.exe
    https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference?view=vs-2022

    does not work msbuild cersion incpmpatibility

DONE: initial build (using visual studio)
DONE: initial test
    window is movable and position is stored and retreived from settings

SKIP: identify method to patch
    SFS.World.Rocket
        contains SFS.World.Throttle thottle;

    SFS.World.Throttle
        contains void UpdateThrottle()

DONE: attempt using Info Overload method to get rocket info
    can also be used to set thrust

DONE: attempt to get values needed for calc

DONE: perform calculation
    S = v * t

    S^2 = v^2 * t^2
    S = 0.5*a*t^2

    S = -2*v^2/a
    a = -2*v^2/S
    v=sqrt(-aS/2)

    throttle*ascentAcceleration+gravity=target
    throttle*ascentAcceleration=target-gravity
    throttle=(target-gravity)/ascentAcceleration

    slider does not work, have created  _UpDownValueLog class to omnlemenr an equivalent
    add 'Time' display then UI ready

DONE: test
    DONE: Moon
        DONE: surface to 100m hover, min throttle 50%
        DONE: 100m hover to surface, min throttle 1%
        DONE: 100m hover to surface, min throttle 50%
        DONE: min throttle 100%
        DONE: orbit to 40m hover  min throttle 79%
            - engines dont start in orbit
                - state as limitation?
            - sub- orbit time estimate is too high
                - now only have time estimate when engines are on
                - removed time display
            - on descent, stutters - seems OK
            - initial dV=3118.2 , orbit vel=339.8 , dV landed = 2625.6, used =  492.6
        DONE: orbit to land min throttle 100%
            - engine might not start if 1m is targeted from initial sub-orbit - sugg target 40m (the default) instead, dV landed = 2663.3 used =454.9

    DONE: test on Mercury
        orbit v=619.4, need to set 10 deg above retrograde
        dV on surface=2291.7  used=826.5 (excess 207.1)

        works, also hover manouver to mountain top

DONE: release build
NOTE: issues
    landing V should be set by adjusting throttle (not stopping and starting them) sugg detect if vel will be too low on next check and adjust thrust to make it hit targe vel on next check
    orbital needs a target position - use to determine distance whch can detering tgangental thrust
    add orbit centifgate force to as well as gravity
        a = (v^2)/r
    version s/b 0.2 ? (1.0 for a feature complete release) sugg landing at a target location is workin

DONE: landing V set by adjusting throttle
    DONE: code
    DONE: build
    DONE: test

DONE: re work calculations, base on target velocity
    DONE: code
    DONE: build
    DONE: test

NOTE: from testing I suspect there was an error in the original equations:
    S = 0.5 * v * t

    S^2 = 0.25 v^2 * t^2
    S = 0.5*a*t^2

    S = -0.5*v^2/a
    a = -0.5*v^2/S
    v=sqrt(-a*S*2)

DONE: try using min thrust in the target velocity calcs

FAIL: try a more accurate 'hight of spacecraft bottom' calc
    SFS.Parts.Modules.PolygonCollider has BoxCollider2D .collider_Box
    UnityEngine.Collider2D has UnityEngine.ColliderDistance2D .Distance(Collider2D)
    UnityEngine.ColliderDistance2D has .distance
    can't find a Collider2D to compare to

    SFS.Parts.Part_Utility has  bool .GetFramingBounds_WorldSpace(out Rect bounds, Part[] parts)
    SFS.World.Rocket has Part[] .partHolder.GetArray()
    can't find a way to use the bounds
    - test with spacecraft with low COM?

DONE: use 0 as minimum height
    DONE: code
    DONE: test

DONE: try using thrust vectors to calculate available thrust
    - test with spacecraft with angled thrusters?

DONE: more extensive testing

>>>: release:
    https://github.com/Darthan184/Thrust-Assist-SFS1/releases/download/0.5/ThrustAssistMod.dll
    https://github.com/Darthan184/Thrust-Assist-SFS1/releases

TBD: add support for horizontal velocity
    - maybe wait until more time available?

TBD: maybe use thrustNormal to add engines pointing diferrent directions?

TBD: support for starting from orbit?

TBD: create documentaion
TBD: create release
TBD: when release path is known can uncomment auto update data
    - current expected path https://github.com/Darthan184/Thrust-Assist-SFS1/releases/latest/download/ThrustAssistMod.dll
TBD: make public
TBD: post

